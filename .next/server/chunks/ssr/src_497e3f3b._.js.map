{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/features/vote/contestant-card.tsx"],"sourcesContent":["\n\"use client\";\n\nimport Image from 'next/image';\nimport { Card, CardContent, CardFooter } from '@/components/ui/card';\nimport { CheckCircle } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\nexport interface Contestant {\n    id: string;\n    name: string;\n    category: string;\n    image: string;\n}\n\ninterface ContestantCardProps {\n    contestant: Contestant;\n    isSelected: boolean;\n    onSelect: () => void;\n}\n\nexport default function ContestantCard({ contestant, isSelected, onSelect }: ContestantCardProps) {\n    return (\n        <Card\n            onClick={onSelect}\n            className={cn(\n                \"cursor-pointer overflow-hidden bg-zinc-800 border-2 transition-all duration-200 ease-in-out relative group\",\n                isSelected ? \"border-amber-400 scale-105 shadow-lg shadow-amber-400/20\" : \"border-transparent hover:border-amber-400/50 hover:scale-105\"\n            )}\n        >\n            <CardContent className=\"p-0 aspect-[4/5] relative\">\n                <Image\n                    src={contestant.image}\n                    alt={contestant.name}\n                    layout=\"fill\"\n                    objectFit=\"cover\"\n                    className=\"transition-transform duration-300 group-hover:scale-110\"\n                />\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent\" />\n                {isSelected && (\n                    <div className=\"absolute top-2 right-2 bg-amber-400 text-black rounded-full h-6 w-6 flex items-center justify-center\">\n                        <CheckCircle className=\"h-4 w-4\" />\n                    </div>\n                )}\n            </CardContent>\n            <CardFooter className=\"p-2 bg-zinc-900/80 absolute bottom-0 w-full\">\n                <div className=\"text-center w-full\">\n                    <p className=\"font-bold text-sm text-white truncate\">{contestant.name}</p>\n                    <p className=\"text-xs text-amber-400 truncate\">{contestant.category}</p>\n                </div>\n            </CardFooter>\n        </Card>\n    );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AALA;;;;;;AAoBe,SAAS,eAAe,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAuB;IAC5F,qBACI,8OAAC,gIAAA,CAAA,OAAI;QACD,SAAS;QACT,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,8GACA,aAAa,6DAA6D;;0BAG9E,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;;kCACnB,8OAAC,6HAAA,CAAA,UAAK;wBACF,KAAK,WAAW,KAAK;wBACrB,KAAK,WAAW,IAAI;wBACpB,QAAO;wBACP,WAAU;wBACV,WAAU;;;;;;kCAEd,8OAAC;wBAAI,WAAU;;;;;;oBACd,4BACG,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC,2NAAA,CAAA,cAAW;4BAAC,WAAU;;;;;;;;;;;;;;;;;0BAInC,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;0BAClB,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAE,WAAU;sCAAyC,WAAW,IAAI;;;;;;sCACrE,8OAAC;4BAAE,WAAU;sCAAmC,WAAW,QAAQ;;;;;;;;;;;;;;;;;;;;;;;AAKvF","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 385, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { z } from 'zod';\n// import { Resend } from 'resend';\n\nconst nominationFormSchema = z.object({\n  category: z.string(),\n  nomineeName: z.string(),\n  nomineePhone: z.string(),\n  nominationReason: z.string(),\n  nominatorName: z.string(),\n  nominatorPhone: z.string(),\n});\n\n// Example using Resend. You would install it with `npm install resend`\n// const resend = new Resend(process.env.RESEND_API_KEY);\n// const YOUR_EMAIL = process.env.NOTIFICATION_EMAIL; // The email you want to receive nominations at\n\nexport async function sendNominationEmail(formData: z.infer<typeof nominationFormSchema>) {\n  \n  // 1. Validate the data on the server\n  const validatedFields = nominationFormSchema.safeParse(formData);\n  if (!validatedFields.success) {\n    return {\n      success: false,\n      error: 'Invalid form data.',\n    };\n  }\n\n  const { category, nomineeName, nomineePhone, nominationReason, nominatorName, nominatorPhone } = validatedFields.data;\n\n  // 2. Log the data to the server console (this will work without any setup)\n  console.log('New Nomination Received:');\n  console.log({\n    category,\n    nomineeName,\n    nomineePhone,\n    nominationReason,\n    nominatorName,\n    nominatorPhone,\n  });\n\n  // 3. Send the email (this part is commented out until you set up an email provider)\n  try {\n    //  if (!YOUR_EMAIL) {\n    //      console.error(\"Email sending is not configured. Missing NOTIFICATION_EMAIL in .env file.\");\n    //      // We still return success to the user because the data was logged.\n    //      return { success: true };\n    //  }\n    //\n    //  await resend.emails.send({\n    //      from: 'SR Fitness Awards <noreply@yourdomain.com>', // Needs a verified domain in Resend\n    //      to: YOUR_EMAIL,\n    //      subject: `New Award Nomination: ${nomineeName} for ${category}`,\n    //      html: `\n    //          <h1>New Award Nomination</h1>\n    //          <p><strong>Category:</strong> ${category}</p>\n    //          <p><strong>Nominee Name:</strong> ${nomineeName}</p>\n    //          <p><strong>Nominee Phone:</strong> ${nomineePhone}</p>\n    //          <hr>\n    //          <h2>Reason for Nomination:</h2>\n    //          <p>${nominationReason}</p>\n    //          <hr>\n    //          <p><strong>Nominated By:</strong> ${nominatorName}</p>\n    //          <p><strong>Nominator's Phone:</strong> ${nominatorPhone}</p>\n    //      `\n    //  });\n\n    return { success: true };\n\n  } catch (error) {\n    console.error('Email sending failed:', error);\n    return {\n      success: false,\n      error: 'Sorry, we couldn\\'t submit your nomination at this time.',\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAmBsB,sBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 398, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/vote/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React, { useState, useMemo, useTransition } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Image from 'next/image';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { ArrowRight, ChevronDown, Award as AwardIcon, Loader2 } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport ContestantCard, { Contestant } from '@/components/features/vote/contestant-card';\nimport { cn } from '@/lib/utils';\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from '@/components/ui/dropdown-menu';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { sendNominationEmail } from '@/app/actions';\n\nconst generalCategories = [\n    { title: \"Community Fitness Hero of the Year\" },\n    { title: \"Fitness Trainer/Coach of the Year\" },\n    { title: \"Fitness Club Coach of the Year\" },\n    { title: \"Inspirational Weight-Loss Journey\" },\n    { title: \"Foundation Fitness Award\" },\n    { title: \"Mental Health & Wellness Advocate\" },\n    { title: \"Life Champion Award - Overcomers series\" },\n    { title: \"Foundation Fitness Hero Award\" },\n    { title: \"Educators Recognition series\" },\n    { title: \"Fitness Event Of The Year\" },\n];\n\nconst professionalCategories = [\n      { title: \"Care-Givers Advocate\" }, // Nurses\n      { title: \"Health Care Treatment Advocate\" }, // Doctors\n      { title: \"Pharmaceutical Service Champion\" }, // Pharmacy / Pharmacist\n      { title: \"Physiotherapist of the Year\" },\n];\n\nconst organizationsCategories = [\n    { title: \"Corporate Wellness Champion\" },\n    { title: \"Corporate Social Responsibility Champion\" },\n    { title: \"Gym of the Year\" },\n];\n\nconst allAwardCategories = [\n    ...generalCategories,\n    ...professionalCategories,\n    ...organizationsCategories\n].map(c => c.title);\n\nconst contestants: Contestant[] = [\n    { id: '1', name: 'Alex Morgan', category: 'Fitness Trainer/Coach of the Year', image: 'https://placehold.co/400x500.png?text=Alex+M' },\n    { id: '2', name: 'Samantha Kerr', category: 'Fitness Trainer/Coach of the Year', image: 'https://placehold.co/400x500.png?text=Sam+K' },\n    { id: '3', name: 'Chris Bumstead', category: 'Fitness Trainer/Coach of the Year', image: 'https://placehold.co/400x500.png?text=Chris+B' },\n    { id: '4', name: 'Victoria U', category: 'Inspirational Weight-Loss Journey', image: 'https://placehold.co/400x500.png?text=Vicky+U' },\n    { id: '5', name: 'Tracy S', category: 'Inspirational Weight-Loss Journey', image: 'https://placehold.co/400x500.png?text=Tracy+S' },\n    { id: '6', name: 'David L', category: 'Community Fitness Hero of the Year', image: 'https://placehold.co/400x500.png?text=David+L' },\n    // Professionals\n    { id: '7', name: 'Nurse Joy', category: 'Care-Givers Advocate', image: 'https://placehold.co/400x500.png?text=Nurse+J' },\n    { id: '8', name: 'Dr. Mike', category: 'Health Care Treatment Advocate', image: 'https://placehold.co/400x500.png?text=Dr+M' },\n    { id: '9', name: 'PharmaPlus', category: 'Pharmaceutical Service Champion', image: 'https://placehold.co/400x500.png?text=Rx+' },\n    { id: '10', name: 'Sarah Lee, RPT', category: 'Physiotherapist of the Year', image: 'https://placehold.co/400x500.png?text=SL' },\n    // Organizations\n    { id: '11', name: 'Wellness Inc.', category: 'Corporate Wellness Champion', image: 'https://placehold.co/400x500.png?text=W+Inc' },\n    { id: '12', name: 'GoodWorks LLC', category: 'Corporate Social Responsibility Champion', image: 'https://placehold.co/400x500.png?text=GW+LLC' },\n    // New contestants\n    { id: '13', name: 'Coach Tunde', category: 'Fitness Club Coach of the Year', image: 'https://placehold.co/400x500.png?text=CT' },\n    { id: '14', name: 'Coach Aisha', category: 'Fitness Club Coach of the Year', image: 'https://placehold.co/400x500.png?text=CA' },\n    { id: '15', name: \"Victor's Fitness\", category: 'Gym of the Year', image: 'https://placehold.co/400x500.png?text=VF' },\n    { id: '16', name: \"Romaan Fitness\", category: 'Gym of the Year', image: 'https://placehold.co/400x500.png?text=RF' },\n    { id: '17', name: \"Hogis Fitness\", category: 'Gym of the Year', image: 'https://placehold.co/400x500.png?text=HF' },\n    { id: '18', name: '1480 AZ GYM (NAVY GYM)', category: 'Gym of the Year', image: 'https://placehold.co/400x500.png?text=AZG' },\n];\n\nconst nominationFormSchema = z.object({\n  category: z.string().min(1, \"Please select an award category.\"),\n  nomineeName: z.string().min(2, \"Nominee name must be at least 2 characters.\"),\n  nomineePhone: z.string().min(10, \"Please enter a valid phone number.\"),\n  nominationReason: z.string().min(10, \"Please provide a reason for the nomination.\"),\n  nominatorName: z.string().min(2, \"Please enter your name.\"),\n  nominatorPhone: z.string().min(10, \"Please enter your phone number.\"),\n});\n\nconst voteOptions = [20, 50, 100, 500, 1200];\n\n\nexport default function VotePage() {\n    const { toast } = useToast();\n    const router = useRouter();\n    const [isPending, startTransition] = useTransition();\n    const [selectedContestant, setSelectedContestant] = useState<Contestant | null>(null);\n    const [selectedCategory, setSelectedCategory] = useState<string>(\"All Categories\");\n    const [numberOfVotes, setNumberOfVotes] = useState<string>(voteOptions[0].toString());\n\n    const form = useForm<z.infer<typeof nominationFormSchema>>({\n        resolver: zodResolver(nominationFormSchema),\n        defaultValues: {\n            category: \"\",\n            nomineeName: \"\",\n            nomineePhone: \"\",\n            nominationReason: \"\",\n            nominatorName: \"\",\n            nominatorPhone: \"\",\n        },\n    });\n\n    const handleNominationSubmit = (values: z.infer<typeof nominationFormSchema>) => {\n        startTransition(async () => {\n            const result = await sendNominationEmail(values);\n            if (result.success) {\n                toast({\n                    title: \"Nomination Submitted!\",\n                    description: \"Thank you for nominating. We will review your submission.\",\n                });\n                form.reset();\n            } else {\n                toast({\n                    title: \"Submission Failed\",\n                    description: result.error,\n                    variant: \"destructive\"\n                });\n            }\n        });\n    };\n\n    const handleProceedToVote = () => {\n        if (!selectedContestant) {\n            toast({\n                title: \"No Contestant Selected\",\n                description: \"Please select a contestant before proceeding.\",\n                variant: \"destructive\"\n            });\n            return;\n        }\n        const { id, name, category } = selectedContestant;\n        const query = new URLSearchParams({ id, name, category, votes: numberOfVotes }).toString();\n        router.push(`/checkout?${query}`);\n    };\n\n    const filteredContestants = useMemo(() => {\n        if (selectedCategory === \"All Categories\") {\n            return contestants;\n        }\n        return contestants.filter(c => c.category === selectedCategory);\n    }, [selectedCategory]);\n\n    const isCategoryActive = (mainCategory: string, subCategories: {title: string}[]) => {\n        if (selectedCategory === mainCategory) return true;\n        return subCategories.some(sub => sub.title === selectedCategory);\n    };\n\n    const renderDropdown = (mainTitle: string, subItems: {title: string}[]) => {\n        const isActive = isCategoryActive(mainTitle, subItems);\n        return (\n            <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                    <Button\n                        variant=\"outline\"\n                        className={cn(\n                            \"border-amber-400/30 text-amber-300 hover:bg-amber-400/10 hover:text-amber-200\",\n                            isActive && \"bg-amber-400/20 ring-2 ring-amber-400 text-amber-200\"\n                        )}\n                    >\n                        {mainTitle} <ChevronDown className=\"ml-2 h-4 w-4\" />\n                    </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent className=\"bg-zinc-900 border-amber-400/30 text-amber-300\">\n                    {subItems.map(item => (\n                         <DropdownMenuItem key={item.title} onSelect={() => setSelectedCategory(item.title)} className=\"cursor-pointer hover:!bg-amber-400/20 focus:!bg-amber-400/20\">\n                            {item.title}\n                        </DropdownMenuItem>\n                    ))}\n                </DropdownMenuContent>\n            </DropdownMenu>\n        );\n    };\n\n    return (\n        <div className=\"bg-black text-white min-h-screen\" style={{\n            backgroundImage: `url('/black-bg.jpeg')`,\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            backgroundAttachment: 'fixed',\n        }}>\n            <div className=\"bg-black/80 backdrop-blur-sm min-h-screen\">\n                <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-16 md:py-24\">\n                    <header className=\"text-center mb-12 md:mb-16\">\n                        <img src=\"/SR.jpg\" alt=\"SR Fitness Awards Logo\" className=\"h-24 w-auto mx-auto mb-4\" data-ai-hint=\"awards logo\" />\n                        <p className=\"font-headline text-2xl text-amber-400 tracking-wider\">\n                            IDENTIFY, RECOGNIZE & CELEBRATE FITNESS INDUSTRY EXCELLENCE\n                        </p>\n                    </header>\n\n                    <div className=\"mb-12 md:mb-16 flex justify-center\">\n                        <Image\n                            src=\"/vote.jpg\"\n                            alt=\"SR Fitness Awards Voting Guide with pricing\"\n                            width={800}\n                            height={800}\n                            className=\"rounded-lg shadow-2xl shadow-amber-500/20 max-w-full sm:max-w-lg md:max-w-xl\"\n                            data-ai-hint=\"voting guide\"\n                            priority\n                        />\n                    </div>\n                    \n                    <main className=\"space-y-16\">\n                        {/* --- Voting Section --- */}\n                        <section id=\"vote\">\n                            <div className=\"grid lg:grid-cols-2 gap-8 md:gap-12 items-start\">\n                                <Card className=\"bg-zinc-900/50 border-amber-400/30 text-white shadow-2xl shadow-amber-500/10\">\n                                    <CardHeader>\n                                        <CardTitle className=\"font-headline text-4xl text-amber-400\">Vote for a Contestant</CardTitle>\n                                        <CardDescription className=\"text-zinc-400\">1. Select a category, then choose a contestant below.</CardDescription>\n                                    </CardHeader>\n                                    <CardContent>\n                                        <div className=\"mb-6\">\n                                            <p className=\"font-semibold text-zinc-300 mb-3\">Filter by Category:</p>\n                                            <div className=\"flex flex-wrap gap-2\">\n                                                <Button\n                                                    variant=\"outline\"\n                                                    onClick={() => setSelectedCategory(\"All Categories\")}\n                                                    className={cn(\n                                                        \"border-amber-400/30 text-amber-300 hover:bg-amber-400/10 hover:text-amber-200\",\n                                                        selectedCategory === \"All Categories\" && \"bg-amber-400/20 ring-2 ring-amber-400 text-amber-200\"\n                                                    )}\n                                                >\n                                                    All Categories\n                                                </Button>\n                                                {renderDropdown(\"General\", generalCategories)}\n                                                {renderDropdown(\"Professionals\", professionalCategories)}\n                                                {renderDropdown(\"Organizations\", organizationsCategories)}\n                                            </div>\n                                        </div>\n                                        <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n                                            {filteredContestants.length > 0 ? (\n                                                filteredContestants.map(c => (\n                                                    <ContestantCard \n                                                        key={c.id} \n                                                        contestant={c}\n                                                        isSelected={selectedContestant?.id === c.id}\n                                                        onSelect={() => {\n                                                            if (selectedContestant?.id === c.id) {\n                                                                setSelectedContestant(null);\n                                                            } else {\n                                                                setSelectedContestant(c);\n                                                            }\n                                                        }}\n                                                    />\n                                                ))\n                                            ) : (\n                                                <div className=\"col-span-full text-center py-8\">\n                                                    <p className=\"text-zinc-400\">No contestants found for this category.</p>\n                                                </div>\n                                            )}\n                                        </div>\n                                    </CardContent>\n                                </Card>\n\n                                <div className=\"space-y-8 sticky top-24\">\n                                    <Card className=\"bg-zinc-900/50 border-amber-400/30 text-white shadow-2xl shadow-amber-500/10\">\n                                        <CardHeader>\n                                            <CardTitle className=\"font-headline text-4xl text-amber-400\">2. Complete Your Vote</CardTitle>\n                                            <CardDescription className=\"text-zinc-400\">\n                                                After selecting a contestant, confirm the number of votes and click below.\n                                            </CardDescription>\n                                        </CardHeader>\n                                        <CardContent>\n                                            {selectedContestant ? (\n                                                <div className=\"bg-zinc-800/70 p-4 rounded-lg space-y-4\">\n                                                    <div className=\"text-center\">\n                                                        <p className=\"text-zinc-300 mb-1\">You have selected:</p>\n                                                        <p className=\"font-bold text-amber-300 text-xl\">{selectedContestant.name}</p>\n                                                        <p className=\"text-xs text-zinc-400\">{selectedContestant.category}</p>\n                                                    </div>\n                                                     <div>\n                                                        <Label className=\"text-zinc-300 font-semibold mb-2 block text-center\">Number of Votes:</Label>\n                                                        <Select onValueChange={setNumberOfVotes} defaultValue={numberOfVotes}>\n                                                            <SelectTrigger className=\"bg-zinc-800 border-zinc-700 focus:ring-amber-400 w-full\">\n                                                                <SelectValue placeholder=\"Select number of votes\" />\n                                                            </SelectTrigger>\n                                                            <SelectContent className=\"bg-zinc-900 border-amber-400/30 text-amber-300\">\n                                                                {voteOptions.map(v => (\n                                                                    <SelectItem key={v} value={String(v)} className=\"cursor-pointer hover:!bg-amber-400/20 focus:!bg-amber-400/20\">{v} Votes</SelectItem>\n                                                                ))}\n                                                            </SelectContent>\n                                                        </Select>\n                                                    </div>\n                                                </div>\n                                            ) : (\n                                                <div className=\"bg-zinc-800/50 p-4 rounded-lg text-center h-24 flex items-center justify-center\">\n                                                    <p className=\"text-zinc-400\">Please select a contestant to vote for.</p>\n                                                </div>\n                                            )}\n                                            <Button\n                                                size=\"lg\"\n                                                className=\"w-full mt-6 bg-amber-500 text-black font-bold text-lg hover:bg-amber-400 disabled:bg-zinc-600 disabled:text-zinc-400 disabled:cursor-not-allowed transition-all duration-300 transform hover:scale-105\"\n                                                onClick={handleProceedToVote}\n                                                disabled={!selectedContestant}\n                                            >\n                                                Proceed to Vote <ArrowRight className=\"ml-2 h-5 w-5\" />\n                                            </Button>\n                                            <p className=\"text-xs text-zinc-500 mt-4 text-center\">\n                                                You will be taken to a final confirmation page with payment details.\n                                            </p>\n                                        </CardContent>\n                                    </Card>\n                                </div>\n                            </div>\n                        </section>\n                        \n                        {/* --- Nomination Section --- */}\n                        <section id=\"nominate\">\n                             <Card className=\"bg-zinc-900/50 border-amber-400/30 text-white shadow-2xl shadow-amber-500/10\">\n                                <CardHeader>\n                                    <div className=\"flex items-center gap-4\">\n                                        <AwardIcon className=\"h-10 w-10 text-amber-400\" />\n                                        <div>\n                                            <CardTitle className=\"font-headline text-4xl text-amber-400\">Online Nomination Form</CardTitle>\n                                            <CardDescription className=\"text-zinc-400\">Think someone deserves an award? Nominate them here!</CardDescription>\n                                        </div>\n                                    </div>\n                                </CardHeader>\n                                <CardContent>\n                                    <Form {...form}>\n                                        <form onSubmit={form.handleSubmit(handleNominationSubmit)} className=\"space-y-6\">\n                                            <div className=\"grid md:grid-cols-2 gap-6\">\n                                                <FormField\n                                                    control={form.control}\n                                                    name=\"category\"\n                                                    render={({ field }) => (\n                                                        <FormItem>\n                                                            <FormLabel className=\"text-zinc-300\">Award Category</FormLabel>\n                                                            <Select onValueChange={field.onChange} defaultValue={field.value}>\n                                                                <FormControl>\n                                                                    <SelectTrigger className=\"bg-zinc-800 border-zinc-700 focus:ring-amber-400\">\n                                                                        <SelectValue placeholder=\"Select an award to nominate for\" />\n                                                                    </SelectTrigger>\n                                                                </FormControl>\n                                                                <SelectContent className=\"bg-zinc-900 border-amber-400/30 text-amber-300\">\n                                                                    {allAwardCategories.map(cat => (\n                                                                        <SelectItem key={cat} value={cat} className=\"cursor-pointer hover:!bg-amber-400/20 focus:!bg-amber-400/20\">{cat}</SelectItem>\n                                                                    ))}\n                                                                </SelectContent>\n                                                            </Select>\n                                                            <FormMessage />\n                                                        </FormItem>\n                                                    )}\n                                                />\n                                                 <FormField\n                                                    control={form.control}\n                                                    name=\"nomineeName\"\n                                                    render={({ field }) => (\n                                                        <FormItem>\n                                                            <FormLabel className=\"text-zinc-300\">Nominee's Full Name</FormLabel>\n                                                            <FormControl>\n                                                                <Input placeholder=\"e.g., John Doe\" {...field} className=\"bg-zinc-800 border-zinc-700 focus:ring-amber-400\"/>\n                                                            </FormControl>\n                                                            <FormMessage />\n                                                        </FormItem>\n                                                    )}\n                                                />\n                                                <FormField\n                                                    control={form.control}\n                                                    name=\"nomineePhone\"\n                                                    render={({ field }) => (\n                                                        <FormItem>\n                                                            <FormLabel className=\"text-zinc-300\">Nominee's Phone Number</FormLabel>\n                                                            <FormControl>\n                                                                <Input placeholder=\"e.g., 08012345678\" {...field} className=\"bg-zinc-800 border-zinc-700 focus:ring-amber-400\"/>\n                                                            </FormControl>\n                                                            <FormMessage />\n                                                        </FormItem>\n                                                    )}\n                                                />\n                                                <FormField\n                                                    control={form.control}\n                                                    name=\"nominationReason\"\n                                                    render={({ field }) => (\n                                                        <FormItem className=\"md:col-span-2\">\n                                                            <FormLabel className=\"text-zinc-300\">Reason for Nomination</FormLabel>\n                                                            <FormControl>\n                                                                <Textarea placeholder=\"Briefly explain why they deserve this award...\" {...field} className=\"bg-zinc-800 border-zinc-700 focus:ring-amber-400\" rows={4}/>\n                                                            </FormControl>\n                                                            <FormMessage />\n                                                        </FormItem>\n                                                    )}\n                                                />\n                                                 <div className=\"md:col-span-2 border-t border-zinc-700 pt-6 space-y-6\">\n                                                     <FormField\n                                                        control={form.control}\n                                                        name=\"nominatorName\"\n                                                        render={({ field }) => (\n                                                            <FormItem>\n                                                                <FormLabel className=\"text-zinc-300\">Your Name (Nominator)</FormLabel>\n                                                                <FormControl>\n                                                                    <Input placeholder=\"Your full name\" {...field} className=\"bg-zinc-800 border-zinc-700 focus:ring-amber-400\"/>\n                                                                </FormControl>\n                                                                <FormMessage />\n                                                            </FormItem>\n                                                        )}\n                                                    />\n                                                     <FormField\n                                                        control={form.control}\n                                                        name=\"nominatorPhone\"\n                                                        render={({ field }) => (\n                                                            <FormItem>\n                                                                <FormLabel className=\"text-zinc-300\">Your Phone Number</FormLabel>\n                                                                <FormControl>\n                                                                    <Input placeholder=\"Your contact phone number\" {...field} className=\"bg-zinc-800 border-zinc-700 focus:ring-amber-400\"/>\n                                                                </FormControl>\n                                                                <FormMessage />\n                                                            </FormItem>\n                                                        )}\n                                                    />\n                                                 </div>\n                                            </div>\n                                            <Button type=\"submit\" size=\"lg\" className=\"w-full md:w-auto bg-amber-500 text-black font-bold hover:bg-amber-400 disabled:opacity-75\" disabled={isPending}>\n                                                {isPending ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : null}\n                                                {isPending ? 'Submitting...' : 'Submit Nomination'}\n                                            </Button>\n                                        </form>\n                                    </Form>\n                                </CardContent>\n                            </Card>\n                        </section>\n                    </main>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n    \n\n    \n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;;;;;;;;;;;;;;;;;;;;;AAsBA,MAAM,oBAAoB;IACtB;QAAE,OAAO;IAAqC;IAC9C;QAAE,OAAO;IAAoC;IAC7C;QAAE,OAAO;IAAiC;IAC1C;QAAE,OAAO;IAAoC;IAC7C;QAAE,OAAO;IAA2B;IACpC;QAAE,OAAO;IAAoC;IAC7C;QAAE,OAAO;IAA0C;IACnD;QAAE,OAAO;IAAgC;IACzC;QAAE,OAAO;IAA+B;IACxC;QAAE,OAAO;IAA4B;CACxC;AAED,MAAM,yBAAyB;IACzB;QAAE,OAAO;IAAuB;IAChC;QAAE,OAAO;IAAiC;IAC1C;QAAE,OAAO;IAAkC;IAC3C;QAAE,OAAO;IAA8B;CAC5C;AAED,MAAM,0BAA0B;IAC5B;QAAE,OAAO;IAA8B;IACvC;QAAE,OAAO;IAA2C;IACpD;QAAE,OAAO;IAAkB;CAC9B;AAED,MAAM,qBAAqB;OACpB;OACA;OACA;CACN,CAAC,GAAG,CAAC,CAAA,IAAK,EAAE,KAAK;AAElB,MAAM,cAA4B;IAC9B;QAAE,IAAI;QAAK,MAAM;QAAe,UAAU;QAAqC,OAAO;IAA+C;IACrI;QAAE,IAAI;QAAK,MAAM;QAAiB,UAAU;QAAqC,OAAO;IAA8C;IACtI;QAAE,IAAI;QAAK,MAAM;QAAkB,UAAU;QAAqC,OAAO;IAAgD;IACzI;QAAE,IAAI;QAAK,MAAM;QAAc,UAAU;QAAqC,OAAO;IAAgD;IACrI;QAAE,IAAI;QAAK,MAAM;QAAW,UAAU;QAAqC,OAAO;IAAgD;IAClI;QAAE,IAAI;QAAK,MAAM;QAAW,UAAU;QAAsC,OAAO;IAAgD;IACnI,gBAAgB;IAChB;QAAE,IAAI;QAAK,MAAM;QAAa,UAAU;QAAwB,OAAO;IAAgD;IACvH;QAAE,IAAI;QAAK,MAAM;QAAY,UAAU;QAAkC,OAAO;IAA6C;IAC7H;QAAE,IAAI;QAAK,MAAM;QAAc,UAAU;QAAmC,OAAO;IAA4C;IAC/H;QAAE,IAAI;QAAM,MAAM;QAAkB,UAAU;QAA+B,OAAO;IAA2C;IAC/H,gBAAgB;IAChB;QAAE,IAAI;QAAM,MAAM;QAAiB,UAAU;QAA+B,OAAO;IAA8C;IACjI;QAAE,IAAI;QAAM,MAAM;QAAiB,UAAU;QAA4C,OAAO;IAA+C;IAC/I,kBAAkB;IAClB;QAAE,IAAI;QAAM,MAAM;QAAe,UAAU;QAAkC,OAAO;IAA2C;IAC/H;QAAE,IAAI;QAAM,MAAM;QAAe,UAAU;QAAkC,OAAO;IAA2C;IAC/H;QAAE,IAAI;QAAM,MAAM;QAAoB,UAAU;QAAmB,OAAO;IAA2C;IACrH;QAAE,IAAI;QAAM,MAAM;QAAkB,UAAU;QAAmB,OAAO;IAA2C;IACnH;QAAE,IAAI;QAAM,MAAM;QAAiB,UAAU;QAAmB,OAAO;IAA2C;IAClH;QAAE,IAAI;QAAM,MAAM;QAA0B,UAAU;QAAmB,OAAO;IAA4C;CAC/H;AAED,MAAM,uBAAuB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,cAAc,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI;IACjC,kBAAkB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI;IACrC,eAAe,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACjC,gBAAgB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI;AACrC;AAEA,MAAM,cAAc;IAAC;IAAI;IAAI;IAAK;IAAK;CAAK;AAG7B,SAAS;IACpB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,WAAW,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD;IACjD,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqB;IAChF,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACjE,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,WAAW,CAAC,EAAE,CAAC,QAAQ;IAElF,MAAM,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAwC;QACvD,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACX,UAAU;YACV,aAAa;YACb,cAAc;YACd,kBAAkB;YAClB,eAAe;YACf,gBAAgB;QACpB;IACJ;IAEA,MAAM,yBAAyB,CAAC;QAC5B,gBAAgB;YACZ,MAAM,SAAS,MAAM,CAAA,GAAA,kJAAA,CAAA,sBAAmB,AAAD,EAAE;YACzC,IAAI,OAAO,OAAO,EAAE;gBAChB,MAAM;oBACF,OAAO;oBACP,aAAa;gBACjB;gBACA,KAAK,KAAK;YACd,OAAO;gBACH,MAAM;oBACF,OAAO;oBACP,aAAa,OAAO,KAAK;oBACzB,SAAS;gBACb;YACJ;QACJ;IACJ;IAEA,MAAM,sBAAsB;QACxB,IAAI,CAAC,oBAAoB;YACrB,MAAM;gBACF,OAAO;gBACP,aAAa;gBACb,SAAS;YACb;YACA;QACJ;QACA,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG;QAC/B,MAAM,QAAQ,IAAI,gBAAgB;YAAE;YAAI;YAAM;YAAU,OAAO;QAAc,GAAG,QAAQ;QACxF,OAAO,IAAI,CAAC,CAAC,UAAU,EAAE,OAAO;IACpC;IAEA,MAAM,sBAAsB,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QAChC,IAAI,qBAAqB,kBAAkB;YACvC,OAAO;QACX;QACA,OAAO,YAAY,MAAM,CAAC,CAAA,IAAK,EAAE,QAAQ,KAAK;IAClD,GAAG;QAAC;KAAiB;IAErB,MAAM,mBAAmB,CAAC,cAAsB;QAC5C,IAAI,qBAAqB,cAAc,OAAO;QAC9C,OAAO,cAAc,IAAI,CAAC,CAAA,MAAO,IAAI,KAAK,KAAK;IACnD;IAEA,MAAM,iBAAiB,CAAC,WAAmB;QACvC,MAAM,WAAW,iBAAiB,WAAW;QAC7C,qBACI,8OAAC,4IAAA,CAAA,eAAY;;8BACT,8OAAC,4IAAA,CAAA,sBAAmB;oBAAC,OAAO;8BACxB,cAAA,8OAAC,kIAAA,CAAA,SAAM;wBACH,SAAQ;wBACR,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,iFACA,YAAY;;4BAGf;4BAAU;0CAAC,8OAAC,oNAAA,CAAA,cAAW;gCAAC,WAAU;;;;;;;;;;;;;;;;;8BAG3C,8OAAC,4IAAA,CAAA,sBAAmB;oBAAC,WAAU;8BAC1B,SAAS,GAAG,CAAC,CAAA,qBACT,8OAAC,4IAAA,CAAA,mBAAgB;4BAAkB,UAAU,IAAM,oBAAoB,KAAK,KAAK;4BAAG,WAAU;sCAC1F,KAAK,KAAK;2BADS,KAAK,KAAK;;;;;;;;;;;;;;;;IAOtD;IAEA,qBACI,8OAAC;QAAI,WAAU;QAAmC,OAAO;YACrD,iBAAiB,CAAC,qBAAqB,CAAC;YACxC,gBAAgB;YAChB,oBAAoB;YACpB,sBAAsB;QAC1B;kBACI,cAAA,8OAAC;YAAI,WAAU;sBACX,cAAA,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAO,WAAU;;0CACd,8OAAC;gCAAI,KAAI;gCAAU,KAAI;gCAAyB,WAAU;gCAA2B,gBAAa;;;;;;0CAClG,8OAAC;gCAAE,WAAU;0CAAuD;;;;;;;;;;;;kCAKxE,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC,6HAAA,CAAA,UAAK;4BACF,KAAI;4BACJ,KAAI;4BACJ,OAAO;4BACP,QAAQ;4BACR,WAAU;4BACV,gBAAa;4BACb,QAAQ;;;;;;;;;;;kCAIhB,8OAAC;wBAAK,WAAU;;0CAEZ,8OAAC;gCAAQ,IAAG;0CACR,cAAA,8OAAC;oCAAI,WAAU;;sDACX,8OAAC,gIAAA,CAAA,OAAI;4CAAC,WAAU;;8DACZ,8OAAC,gIAAA,CAAA,aAAU;;sEACP,8OAAC,gIAAA,CAAA,YAAS;4DAAC,WAAU;sEAAwC;;;;;;sEAC7D,8OAAC,gIAAA,CAAA,kBAAe;4DAAC,WAAU;sEAAgB;;;;;;;;;;;;8DAE/C,8OAAC,gIAAA,CAAA,cAAW;;sEACR,8OAAC;4DAAI,WAAU;;8EACX,8OAAC;oEAAE,WAAU;8EAAmC;;;;;;8EAChD,8OAAC;oEAAI,WAAU;;sFACX,8OAAC,kIAAA,CAAA,SAAM;4EACH,SAAQ;4EACR,SAAS,IAAM,oBAAoB;4EACnC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,iFACA,qBAAqB,oBAAoB;sFAEhD;;;;;;wEAGA,eAAe,WAAW;wEAC1B,eAAe,iBAAiB;wEAChC,eAAe,iBAAiB;;;;;;;;;;;;;sEAGzC,8OAAC;4DAAI,WAAU;sEACV,oBAAoB,MAAM,GAAG,IAC1B,oBAAoB,GAAG,CAAC,CAAA,kBACpB,8OAAC,4JAAA,CAAA,UAAc;oEAEX,YAAY;oEACZ,YAAY,oBAAoB,OAAO,EAAE,EAAE;oEAC3C,UAAU;wEACN,IAAI,oBAAoB,OAAO,EAAE,EAAE,EAAE;4EACjC,sBAAsB;wEAC1B,OAAO;4EACH,sBAAsB;wEAC1B;oEACJ;mEATK,EAAE,EAAE;;;;0FAajB,8OAAC;gEAAI,WAAU;0EACX,cAAA,8OAAC;oEAAE,WAAU;8EAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;sDAOjD,8OAAC;4CAAI,WAAU;sDACX,cAAA,8OAAC,gIAAA,CAAA,OAAI;gDAAC,WAAU;;kEACZ,8OAAC,gIAAA,CAAA,aAAU;;0EACP,8OAAC,gIAAA,CAAA,YAAS;gEAAC,WAAU;0EAAwC;;;;;;0EAC7D,8OAAC,gIAAA,CAAA,kBAAe;gEAAC,WAAU;0EAAgB;;;;;;;;;;;;kEAI/C,8OAAC,gIAAA,CAAA,cAAW;;4DACP,mCACG,8OAAC;gEAAI,WAAU;;kFACX,8OAAC;wEAAI,WAAU;;0FACX,8OAAC;gFAAE,WAAU;0FAAqB;;;;;;0FAClC,8OAAC;gFAAE,WAAU;0FAAoC,mBAAmB,IAAI;;;;;;0FACxE,8OAAC;gFAAE,WAAU;0FAAyB,mBAAmB,QAAQ;;;;;;;;;;;;kFAEpE,8OAAC;;0FACE,8OAAC,iIAAA,CAAA,QAAK;gFAAC,WAAU;0FAAqD;;;;;;0FACtE,8OAAC,kIAAA,CAAA,SAAM;gFAAC,eAAe;gFAAkB,cAAc;;kGACnD,8OAAC,kIAAA,CAAA,gBAAa;wFAAC,WAAU;kGACrB,cAAA,8OAAC,kIAAA,CAAA,cAAW;4FAAC,aAAY;;;;;;;;;;;kGAE7B,8OAAC,kIAAA,CAAA,gBAAa;wFAAC,WAAU;kGACpB,YAAY,GAAG,CAAC,CAAA,kBACb,8OAAC,kIAAA,CAAA,aAAU;gGAAS,OAAO,OAAO;gGAAI,WAAU;;oGAAgE;oGAAE;;+FAAjG;;;;;;;;;;;;;;;;;;;;;;;;;;;qFAOrC,8OAAC;gEAAI,WAAU;0EACX,cAAA,8OAAC;oEAAE,WAAU;8EAAgB;;;;;;;;;;;0EAGrC,8OAAC,kIAAA,CAAA,SAAM;gEACH,MAAK;gEACL,WAAU;gEACV,SAAS;gEACT,UAAU,CAAC;;oEACd;kFACmB,8OAAC,kNAAA,CAAA,aAAU;wEAAC,WAAU;;;;;;;;;;;;0EAE1C,8OAAC;gEAAE,WAAU;0EAAyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0CAU1E,8OAAC;gCAAQ,IAAG;0CACP,cAAA,8OAAC,gIAAA,CAAA,OAAI;oCAAC,WAAU;;sDACb,8OAAC,gIAAA,CAAA,aAAU;sDACP,cAAA,8OAAC;gDAAI,WAAU;;kEACX,8OAAC,oMAAA,CAAA,QAAS;wDAAC,WAAU;;;;;;kEACrB,8OAAC;;0EACG,8OAAC,gIAAA,CAAA,YAAS;gEAAC,WAAU;0EAAwC;;;;;;0EAC7D,8OAAC,gIAAA,CAAA,kBAAe;gEAAC,WAAU;0EAAgB;;;;;;;;;;;;;;;;;;;;;;;sDAIvD,8OAAC,gIAAA,CAAA,cAAW;sDACR,cAAA,8OAAC,gIAAA,CAAA,OAAI;gDAAE,GAAG,IAAI;0DACV,cAAA,8OAAC;oDAAK,UAAU,KAAK,YAAY,CAAC;oDAAyB,WAAU;;sEACjE,8OAAC;4DAAI,WAAU;;8EACX,8OAAC,gIAAA,CAAA,YAAS;oEACN,SAAS,KAAK,OAAO;oEACrB,MAAK;oEACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACd,8OAAC,gIAAA,CAAA,WAAQ;;8FACL,8OAAC,gIAAA,CAAA,YAAS;oFAAC,WAAU;8FAAgB;;;;;;8FACrC,8OAAC,kIAAA,CAAA,SAAM;oFAAC,eAAe,MAAM,QAAQ;oFAAE,cAAc,MAAM,KAAK;;sGAC5D,8OAAC,gIAAA,CAAA,cAAW;sGACR,cAAA,8OAAC,kIAAA,CAAA,gBAAa;gGAAC,WAAU;0GACrB,cAAA,8OAAC,kIAAA,CAAA,cAAW;oGAAC,aAAY;;;;;;;;;;;;;;;;sGAGjC,8OAAC,kIAAA,CAAA,gBAAa;4FAAC,WAAU;sGACpB,mBAAmB,GAAG,CAAC,CAAA,oBACpB,8OAAC,kIAAA,CAAA,aAAU;oGAAW,OAAO;oGAAK,WAAU;8GAAgE;mGAA3F;;;;;;;;;;;;;;;;8FAI7B,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8EAIvB,8OAAC,gIAAA,CAAA,YAAS;oEACP,SAAS,KAAK,OAAO;oEACrB,MAAK;oEACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACd,8OAAC,gIAAA,CAAA,WAAQ;;8FACL,8OAAC,gIAAA,CAAA,YAAS;oFAAC,WAAU;8FAAgB;;;;;;8FACrC,8OAAC,gIAAA,CAAA,cAAW;8FACR,cAAA,8OAAC,iIAAA,CAAA,QAAK;wFAAC,aAAY;wFAAkB,GAAG,KAAK;wFAAE,WAAU;;;;;;;;;;;8FAE7D,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8EAIxB,8OAAC,gIAAA,CAAA,YAAS;oEACN,SAAS,KAAK,OAAO;oEACrB,MAAK;oEACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACd,8OAAC,gIAAA,CAAA,WAAQ;;8FACL,8OAAC,gIAAA,CAAA,YAAS;oFAAC,WAAU;8FAAgB;;;;;;8FACrC,8OAAC,gIAAA,CAAA,cAAW;8FACR,cAAA,8OAAC,iIAAA,CAAA,QAAK;wFAAC,aAAY;wFAAqB,GAAG,KAAK;wFAAE,WAAU;;;;;;;;;;;8FAEhE,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8EAIxB,8OAAC,gIAAA,CAAA,YAAS;oEACN,SAAS,KAAK,OAAO;oEACrB,MAAK;oEACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACd,8OAAC,gIAAA,CAAA,WAAQ;4EAAC,WAAU;;8FAChB,8OAAC,gIAAA,CAAA,YAAS;oFAAC,WAAU;8FAAgB;;;;;;8FACrC,8OAAC,gIAAA,CAAA,cAAW;8FACR,cAAA,8OAAC,oIAAA,CAAA,WAAQ;wFAAC,aAAY;wFAAkD,GAAG,KAAK;wFAAE,WAAU;wFAAmD,MAAM;;;;;;;;;;;8FAEzJ,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8EAIvB,8OAAC;oEAAI,WAAU;;sFACX,8OAAC,gIAAA,CAAA,YAAS;4EACP,SAAS,KAAK,OAAO;4EACrB,MAAK;4EACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACd,8OAAC,gIAAA,CAAA,WAAQ;;sGACL,8OAAC,gIAAA,CAAA,YAAS;4FAAC,WAAU;sGAAgB;;;;;;sGACrC,8OAAC,gIAAA,CAAA,cAAW;sGACR,cAAA,8OAAC,iIAAA,CAAA,QAAK;gGAAC,aAAY;gGAAkB,GAAG,KAAK;gGAAE,WAAU;;;;;;;;;;;sGAE7D,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;sFAIvB,8OAAC,gIAAA,CAAA,YAAS;4EACP,SAAS,KAAK,OAAO;4EACrB,MAAK;4EACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACd,8OAAC,gIAAA,CAAA,WAAQ;;sGACL,8OAAC,gIAAA,CAAA,YAAS;4FAAC,WAAU;sGAAgB;;;;;;sGACrC,8OAAC,gIAAA,CAAA,cAAW;sGACR,cAAA,8OAAC,iIAAA,CAAA,QAAK;gGAAC,aAAY;gGAA6B,GAAG,KAAK;gGAAE,WAAU;;;;;;;;;;;sGAExE,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;sEAMhC,8OAAC,kIAAA,CAAA,SAAM;4DAAC,MAAK;4DAAS,MAAK;4DAAK,WAAU;4DAA4F,UAAU;;gEAC3I,0BAAY,8OAAC,iNAAA,CAAA,UAAO;oEAAC,WAAU;;;;;2EAAiC;gEAChE,YAAY,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAY/E","debugId":null}}]
}