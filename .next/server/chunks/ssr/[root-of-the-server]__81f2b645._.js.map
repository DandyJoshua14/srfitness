{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-meal-plan-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview Generates a personalized meal plan based on user inputs.\n *\n * - generateMealPlan - A function that calls the meal plan generation flow.\n * - GenerateMealPlanInput - The input type for the meal plan generation.\n * - GenerateMealPlanOutput - The return type (the meal plan).\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\n\n// Define input schema based on QuestionnaireForm\nconst GenerateMealPlanInputSchema = z.object({\n  age: z.coerce.number().describe(\"User's age in years.\"),\n  gender: z.string().describe(\"User's gender (e.g., Male, Female, Other).\"),\n  height: z.coerce.number().describe(\"User's height in centimeters.\"),\n  weight: z.coerce.number().describe(\"User's weight in kilograms.\"),\n  activityLevel: z.string().describe(\"User's general activity level (e.g., Sedentary, Lightly Active, Moderately Active, Very Active, Extra Active).\"),\n  fitnessGoal: z.string().describe(\"User's primary fitness goal (e.g., Weight Loss, Muscle Gain, Maintenance).\"),\n  preferences: z.string().optional().describe(\"User's dietary preferences, comma-separated (e.g., Vegetarian, Gluten-Free).\"),\n  allergies: z.string().optional().describe(\"User's food allergies, comma-separated (e.g., Peanuts, Shellfish).\"),\n  dislikedFoods: z.string().optional().describe(\"Foods the user dislikes, comma-separated (e.g., Mushrooms, Olives).\"),\n  numberOfDays: z.coerce.number().min(1).max(7).default(7).describe(\"Number of days for the meal plan (1-7).\")\n});\nexport type GenerateMealPlanInput = z.infer<typeof GenerateMealPlanInputSchema>;\n\n// Define output schema for the meal plan\nconst MealSchema = z.object({\n  name: z.string().describe(\"Name of the meal (e.g., Breakfast, Lunch, Dinner, Snack).\"),\n  recipe: z.string().describe(\"Name of the recipe or dish.\"),\n  calories: z.coerce.number().describe(\"Estimated calories for the meal.\"),\n  protein: z.coerce.number().describe(\"Estimated protein in grams.\"),\n  carbs: z.coerce.number().describe(\"Estimated carbohydrates in grams.\"),\n  fat: z.coerce.number().describe(\"Estimated fat in grams.\"),\n  ingredients: z.array(z.string()).describe(\"List of main ingredients for the recipe.\")\n});\n\nconst DailyPlanSchema = z.object({\n  day: z.string().describe(\"Day of the week (e.g., Monday, Tuesday).\"),\n  meals: z.array(MealSchema).describe(\"List of meals for the day.\"),\n  dailyTotals: z.object({\n    calories: z.coerce.number().describe(\"Total estimated calories for the day.\"),\n    protein: z.coerce.number().describe(\"Total estimated protein for the day.\"),\n    carbs: z.coerce.number().describe(\"Total estimated carbohydrates for the day.\"),\n    fat: z.coerce.number().describe(\"Total estimated fat for the day.\"),\n  }).describe(\"Aggregated nutritional information for the day.\")\n});\n\nconst GenerateMealPlanOutputSchema = z.object({\n  dailyPlans: z.array(DailyPlanSchema).describe(\"An array of daily meal plans, typically for a week.\"),\n  summary: z.string().optional().describe(\"A brief summary or any important notes about the meal plan.\")\n});\nexport type GenerateMealPlanOutput = z.infer<typeof GenerateMealPlanOutputSchema>;\n\n\n// This is the exported function React components will call.\nexport async function generateMealPlan(input: GenerateMealPlanInput): Promise<GenerateMealPlanOutput> {\n  console.log('generateMealPlan called with input:', input);\n  return generateMealPlanFlow(input);\n}\n\n// Define the Genkit prompt\nconst mealPlanPrompt = ai.definePrompt({\n  name: 'mealPlanPrompt',\n  input: { schema: GenerateMealPlanInputSchema },\n  output: { schema: GenerateMealPlanOutputSchema },\n  prompt: `You are an expert nutritionist and personal chef. Generate a personalized meal plan for {{numberOfDays}} days based on the following user profile:\nAge: {{age}}\nGender: {{gender}}\nHeight: {{height}} cm\nWeight: {{weight}} kg\nActivity Level: {{activityLevel}}\nPrimary Fitness Goal: {{fitnessGoal}}\nDietary Preferences: {{preferences}}\nAllergies: {{allergies}}\nDisliked Foods: {{dislikedFoods}}\n\nFor each day, provide a list of meals (Breakfast, Lunch, Dinner, and optionally 1-2 Snacks).\nFor each meal, include:\n- Recipe name\n- Estimated calories\n- Estimated protein (grams)\n- Estimated carbohydrates (grams)\n- Estimated fat (grams)\n- A list of main ingredients.\n\nAlso, calculate and provide daily total calories, protein, carbs, and fat for each day.\nEnsure the meal plan is balanced, varied, and aligned with the user's fitness goal and preferences.\nIf dietary preferences like Vegetarian or Vegan are specified, ensure all meals comply.\nAvoid any listed allergies and disliked foods.\nProvide a brief summary or any important notes about the meal plan if necessary.\nOutput the plan in the specified JSON format.\n`,\n});\n\n// Define the Genkit flow\nconst generateMealPlanFlow = ai.defineFlow(\n  {\n    name: 'generateMealPlanFlow',\n    inputSchema: GenerateMealPlanInputSchema,\n    outputSchema: GenerateMealPlanOutputSchema,\n  },\n  async (input) => {\n    const {output} = await mealPlanPrompt(input);\n    if (!output) {\n      throw new Error(\"Failed to generate meal plan from AI.\");\n    }\n    return output;\n  }\n);\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/meal-planner/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateMealPlan as '40365300c7a981dbeb6fff20c8f66b4a3105a0d4ec'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 408, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/features/meal-planner/questionnaire-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/features/meal-planner/questionnaire-form.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/features/meal-planner/questionnaire-form.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+T,GAC5V,6FACA","debugId":null}},
    {"offset": {"line": 422, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/features/meal-planner/questionnaire-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/features/meal-planner/questionnaire-form.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/features/meal-planner/questionnaire-form.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2S,GACxU,yEACA","debugId":null}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Separator = registerClientReference(\n    function() { throw new Error(\"Attempted to call Separator() from the server but Separator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/separator.tsx <module evaluation>\",\n    \"Separator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,iEACA","debugId":null}},
    {"offset": {"line": 460, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Separator = registerClientReference(\n    function() { throw new Error(\"Attempted to call Separator() from the server but Separator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/separator.tsx\",\n    \"Separator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,6CACA","debugId":null}},
    {"offset": {"line": 474, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 484, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 500, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 560, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/meal-planner/page.tsx"],"sourcesContent":["\nimport type { Metadata } from 'next';\nimport QuestionnaireForm from '@/components/features/meal-planner/questionnaire-form';\nimport { Separator } from '@/components/ui/separator';\nimport { Button } from '@/components/ui/button';\nimport Link from 'next/link';\nimport { NotebookText } from 'lucide-react';\n\nexport const metadata: Metadata = {\n  title: 'Personalized Meal Planner - SR Fitness',\n  description: 'Get a custom meal plan tailored to your dietary needs and fitness goals.',\n};\n\nexport default function MealPlannerPage() {\n  return (\n    <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-16 md:py-24\">\n      <div className=\"text-center mb-12 md:mb-16\">\n        <NotebookText className=\"h-16 w-16 text-primary mx-auto mb-4\" />\n        <h1 className=\"font-headline text-4xl sm:text-5xl md:text-6xl font-bold text-primary mb-4\">\n          Personalized Meal Planner\n        </h1>\n        <p className=\"text-lg sm:text-xl text-muted-foreground max-w-3xl mx-auto\">\n          Answer a few questions to generate a personalized meal plan designed to help you achieve your fitness and dietary goals.\n        </p>\n      </div>\n\n      <QuestionnaireForm />\n\n      <Separator className=\"my-12 md:my-16\" />\n\n      <div className=\"text-center\">\n        <h2 className=\"font-headline text-3xl text-foreground font-semibold mb-6\">\n          Already have a plan?\n        </h2>\n        <Button asChild size=\"lg\" className=\"font-headline text-xl\">\n          <Link href=\"/meal-planner/plan\">View Your Meal Plan</Link>\n        </Button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,sNAAA,CAAA,eAAY;wBAAC,WAAU;;;;;;kCACxB,8OAAC;wBAAG,WAAU;kCAA6E;;;;;;kCAG3F,8OAAC;wBAAE,WAAU;kCAA6D;;;;;;;;;;;;0BAK5E,8OAAC,0KAAA,CAAA,UAAiB;;;;;0BAElB,8OAAC,qIAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;0BAErB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA4D;;;;;;kCAG1E,8OAAC,kIAAA,CAAA,SAAM;wBAAC,OAAO;wBAAC,MAAK;wBAAK,WAAU;kCAClC,cAAA,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;sCAAqB;;;;;;;;;;;;;;;;;;;;;;;AAK1C","debugId":null}}]
}