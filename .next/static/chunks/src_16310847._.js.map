{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 602, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 705, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-meal-plan-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview Generates a personalized meal plan based on user inputs.\n *\n * - generateMealPlan - A function that calls the meal plan generation flow.\n * - GenerateMealPlanInput - The input type for the meal plan generation.\n * - GenerateMealPlanOutput - The return type (the meal plan).\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\n\n// Define input schema based on QuestionnaireForm\nconst GenerateMealPlanInputSchema = z.object({\n  age: z.coerce.number().describe(\"User's age in years.\"),\n  gender: z.string().describe(\"User's gender (e.g., Male, Female, Other).\"),\n  height: z.coerce.number().describe(\"User's height in centimeters.\"),\n  weight: z.coerce.number().describe(\"User's weight in kilograms.\"),\n  activityLevel: z.string().describe(\"User's general activity level (e.g., Sedentary, Lightly Active, Moderately Active, Very Active, Extra Active).\"),\n  fitnessGoal: z.string().describe(\"User's primary fitness goal (e.g., Weight Loss, Muscle Gain, Maintenance).\"),\n  preferences: z.string().optional().describe(\"User's dietary preferences, comma-separated (e.g., Vegetarian, Gluten-Free).\"),\n  allergies: z.string().optional().describe(\"User's food allergies, comma-separated (e.g., Peanuts, Shellfish).\"),\n  dislikedFoods: z.string().optional().describe(\"Foods the user dislikes, comma-separated (e.g., Mushrooms, Olives).\"),\n  numberOfDays: z.coerce.number().min(1).max(7).default(7).describe(\"Number of days for the meal plan (1-7).\")\n});\nexport type GenerateMealPlanInput = z.infer<typeof GenerateMealPlanInputSchema>;\n\n// Define output schema for the meal plan\nconst MealSchema = z.object({\n  name: z.string().describe(\"Name of the meal (e.g., Breakfast, Lunch, Dinner, Snack).\"),\n  recipe: z.string().describe(\"Creative and appealing name of the recipe or dish.\"),\n  calories: z.coerce.number().describe(\"Estimated calories for the meal.\"),\n  protein: z.coerce.number().describe(\"Estimated protein in grams.\"),\n  carbs: z.coerce.number().describe(\"Estimated carbohydrates in grams.\"),\n  fat: z.coerce.number().describe(\"Estimated fat in grams.\"),\n  ingredients: z.array(z.string()).describe(\"List of main ingredients for the recipe.\"),\n  instructions: z.string().describe(\"Simple, step-by-step cooking instructions for the recipe.\"),\n});\n\nconst DailyPlanSchema = z.object({\n  day: z.string().describe(\"Day of the week (e.g., Monday, Tuesday).\"),\n  meals: z.array(MealSchema).describe(\"List of meals for the day.\"),\n  dailyTotals: z.object({\n    calories: z.coerce.number().describe(\"Total estimated calories for the day.\"),\n    protein: z.coerce.number().describe(\"Total estimated protein for the day.\"),\n    carbs: z.coerce.number().describe(\"Total estimated carbohydrates for the day.\"),\n    fat: z.coerce.number().describe(\"Total estimated fat for the day.\"),\n  }).describe(\"Aggregated nutritional information for the day.\")\n});\n\nconst GenerateMealPlanOutputSchema = z.object({\n  dailyPlans: z.array(DailyPlanSchema).describe(\"An array of daily meal plans, typically for a week.\"),\n  summary: z.string().optional().describe(\"A brief summary or any important notes about the meal plan.\")\n});\nexport type GenerateMealPlanOutput = z.infer<typeof GenerateMealPlanOutputSchema>;\n\n\n// This is the exported function React components will call.\nexport async function generateMealPlan(input: GenerateMealPlanInput): Promise<GenerateMealPlanOutput> {\n  console.log('generateMealPlan called with input:', input);\n  return generateMealPlanFlow(input);\n}\n\n// Define the Genkit prompt\nconst mealPlanPrompt = ai.definePrompt({\n  name: 'mealPlanPrompt',\n  input: { schema: GenerateMealPlanInputSchema },\n  output: { schema: GenerateMealPlanOutputSchema },\n  prompt: `You are an expert nutritionist and world-class chef, powered by Google's Gemini model. Your mission is to generate an exciting, delicious, and effective personalized meal plan for {{numberOfDays}} days based on the following user profile:\nAge: {{age}}\nGender: {{gender}}\nHeight: {{height}} cm\nWeight: {{weight}} kg\nActivity Level: {{activityLevel}}\nPrimary Fitness Goal: {{fitnessGoal}}\nDietary Preferences: {{preferences}}\nAllergies: {{allergies}}\nDisliked Foods: {{dislikedFoods}}\n\nFor each day, provide a list of meals (Breakfast, Lunch, Dinner, and optionally 1-2 Snacks).\nFor each meal, include:\n- A creative and appealing recipe name.\n- Estimated calories, protein (grams), carbohydrates (grams), and fat (grams).\n- A list of main ingredients.\n- Simple, step-by-step cooking instructions.\n\nAlso, calculate and provide daily total calories, protein, carbs, and fat for each day.\nEnsure the meal plan is balanced, varied, and aligned with the user's fitness goal and preferences. Be creative and avoid repetitive meals.\nIf dietary preferences like Vegetarian or Vegan are specified, ensure all meals comply.\nStrictly avoid any listed allergies and disliked foods.\nProvide a brief summary or any important notes about the meal plan if necessary.\nOutput the plan in the specified JSON format, ensuring every meal object includes the 'instructions' field.\n`,\n});\n\n// Define the Genkit flow\nconst generateMealPlanFlow = ai.defineFlow(\n  {\n    name: 'generateMealPlanFlow',\n    inputSchema: GenerateMealPlanInputSchema,\n    outputSchema: GenerateMealPlanOutputSchema,\n  },\n  async (input) => {\n    const {output} = await mealPlanPrompt(input);\n    if (!output) {\n      throw new Error(\"Failed to generate meal plan from AI.\");\n    }\n    return output;\n  }\n);\n"],"names":[],"mappings":";;;;;;IA2DsB,mBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 721, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/features/meal-planner/questionnaire-form.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState } from 'react';\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport * as z from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { useRouter } from 'next/navigation';\nimport { generateMealPlan, GenerateMealPlanInput } from '@/ai/flows/generate-meal-plan-flow'; \nimport { Loader2 } from 'lucide-react';\n\nconst dietaryPreferences = [\"Vegetarian\", \"Vegan\", \"Pescatarian\", \"Gluten-Free\", \"Dairy-Free\", \"Keto\", \"Paleo\", \"None\"];\nconst activityLevels = [\"Sedentary (little or no exercise)\", \"Lightly Active (light exercise/sports 1-3 days/week)\", \"Moderately Active (moderate exercise/sports 3-5 days/week)\", \"Very Active (hard exercise/sports 6-7 days a week)\", \"Extra Active (very hard exercise/sports & physical job)\"];\nconst fitnessGoals = [\"Weight Loss\", \"Muscle Gain\", \"Maintenance\", \"Improve Endurance\", \"General Health & Wellness\"];\n\nconst formSchema = z.object({\n  age: z.coerce.number().min(16, \"Must be at least 16 years old\").max(100, \"Age seems high, please verify.\"),\n  gender: z.enum([\"Male\", \"Female\", \"Other\"], { required_error: \"Gender is required\" }),\n  height: z.coerce.number().min(100, \"Height in cm (e.g., 175)\").max(250, \"Height seems unusual, please verify.\"),\n  weight: z.coerce.number().min(30, \"Weight in kg (e.g., 70)\").max(300, \"Weight seems unusual, please verify.\"),\n  activityLevel: z.enum(activityLevels as [string, ...string[]], { required_error: \"Activity level is required\" }),\n  fitnessGoal: z.enum(fitnessGoals as [string, ...string[]], { required_error: \"Fitness goal is required\" }),\n  numberOfDays: z.coerce.number().min(1).max(7).default(3),\n  dietaryPreferences: z.array(z.string()).optional(),\n  allergies: z.string().optional(),\n  dislikedFoods: z.string().optional(),\n});\n\nexport type MealPlanQuestionnaireInput = z.infer<typeof formSchema>;\n\nexport default function QuestionnaireForm() {\n  const { toast } = useToast();\n  const router = useRouter();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const form = useForm<MealPlanQuestionnaireInput>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      age: undefined,\n      gender: undefined,\n      height: undefined,\n      weight: undefined,\n      activityLevel: activityLevels[2], // Default to Moderately Active\n      fitnessGoal: fitnessGoals[0], // Default to Weight Loss\n      numberOfDays: 3,\n      dietaryPreferences: [],\n      allergies: \"\",\n      dislikedFoods: \"\",\n    },\n  });\n\n  async function onSubmit(values: MealPlanQuestionnaireInput) {\n    setIsLoading(true);\n    console.log(\"Questionnaire submitted:\", values);\n\n    const aiInput: GenerateMealPlanInput = {\n      age: values.age,\n      gender: values.gender,\n      height: values.height,\n      weight: values.weight,\n      activityLevel: values.activityLevel,\n      fitnessGoal: values.fitnessGoal,\n      numberOfDays: values.numberOfDays,\n      preferences: values.dietaryPreferences?.includes(\"None\") ? undefined : values.dietaryPreferences?.join(', ') || undefined,\n      allergies: values.allergies || undefined,\n      dislikedFoods: values.dislikedFoods || undefined,\n    };\n\n    try {\n      const mealPlan = await generateMealPlan(aiInput); // Call Genkit flow\n      console.log(\"Generated Meal Plan:\", mealPlan);\n      \n      // Store the generated plan in localStorage to pass to the plan display page\n      localStorage.setItem('srFitnessMealPlan', JSON.stringify(mealPlan));\n\n      toast({\n        title: \"Meal Plan Generated!\",\n        description: \"Your personalized meal plan is ready. Redirecting...\",\n        duration: 3000,\n      });\n      \n      router.push('/meal-planner/plan');\n\n    } catch (error) {\n      console.error(\"Error generating meal plan:\", error);\n      let errorMessage = \"Could not generate meal plan. Please try again.\";\n      if (error instanceof Error) {\n        errorMessage = error.message.includes(\"blocked\") ? \"Content generation was blocked due to safety settings. Please adjust your input.\" : error.message;\n      }\n      toast({\n        title: \"Error Generating Plan\",\n        description: errorMessage,\n        variant: \"destructive\",\n        duration: 7000,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <Card className=\"max-w-2xl mx-auto shadow-xl border-primary/20\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl text-primary\">Tell Us About Yourself</CardTitle>\n        <CardDescription>\n          This information will help our AI create a meal plan tailored to your needs.\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n            <div className=\"grid md:grid-cols-2 gap-x-6 gap-y-8\">\n              <FormField\n                control={form.control}\n                name=\"age\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Age</FormLabel>\n                    <FormControl><Input type=\"number\" placeholder=\"Your Age (e.g., 30)\" {...field} /></FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"gender\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Gender</FormLabel>\n                    <Select onValueChange={field.onChange} defaultValue={field.value}>\n                      <FormControl><SelectTrigger><SelectValue placeholder=\"Select Gender\" /></SelectTrigger></FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"Male\">Male</SelectItem>\n                        <SelectItem value=\"Female\">Female</SelectItem>\n                        <SelectItem value=\"Other\">Prefer not to say / Other</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"height\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Height (cm)</FormLabel>\n                    <FormControl><Input type=\"number\" placeholder=\"e.g., 175\" {...field} /></FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"weight\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Weight (kg)</FormLabel>\n                    <FormControl><Input type=\"number\" placeholder=\"e.g., 70\" {...field} /></FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <FormField\n              control={form.control}\n              name=\"activityLevel\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Activity Level</FormLabel>\n                  <Select onValueChange={field.onChange} defaultValue={field.value}>\n                    <FormControl><SelectTrigger><SelectValue placeholder=\"Select Activity Level\" /></SelectTrigger></FormControl>\n                    <SelectContent>\n                      {activityLevels.map(level => <SelectItem key={level} value={level}>{level}</SelectItem>)}\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"fitnessGoal\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Primary Fitness Goal</FormLabel>\n                  <Select onValueChange={field.onChange} defaultValue={field.value}>\n                    <FormControl><SelectTrigger><SelectValue placeholder=\"Select Fitness Goal\" /></SelectTrigger></FormControl>\n                    <SelectContent>\n                      {fitnessGoals.map(goal => <SelectItem key={goal} value={goal}>{goal}</SelectItem>)}\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n             <FormField\n                control={form.control}\n                name=\"numberOfDays\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Meal Plan Duration (Days)</FormLabel>\n                    <Select onValueChange={(value) => field.onChange(parseInt(value))} defaultValue={String(field.value)}>\n                      <FormControl><SelectTrigger><SelectValue placeholder=\"Select number of days\" /></SelectTrigger></FormControl>\n                      <SelectContent>\n                        {[1,2,3,4,5,6,7].map(day => <SelectItem key={day} value={String(day)}>{day} Day{day > 1 ? 's' : ''}</SelectItem>)}\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n\n            <FormField\n              control={form.control}\n              name=\"dietaryPreferences\"\n              render={() => (\n                <FormItem>\n                  <FormLabel>Dietary Preferences (select all that apply, or 'None')</FormLabel>\n                  <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-x-4 gap-y-3\">\n                    {dietaryPreferences.map((item) => (\n                      <FormField\n                        key={item}\n                        control={form.control}\n                        name=\"dietaryPreferences\"\n                        render={({ field }) => {\n                          return (\n                            <FormItem className=\"flex flex-row items-center space-x-2.5 space-y-0\">\n                              <FormControl>\n                                <Checkbox\n                                  checked={field.value?.includes(item)}\n                                  onCheckedChange={(checked) => {\n                                    let newValue = field.value ? [...field.value] : [];\n                                    if (checked) {\n                                      if (item === \"None\") { // If \"None\" is checked, uncheck others and set only \"None\"\n                                        newValue = [\"None\"];\n                                      } else { // If other item is checked, uncheck \"None\" and add item\n                                        newValue = newValue.filter(v => v !== \"None\");\n                                        newValue.push(item);\n                                      }\n                                    } else { // Unchecking an item\n                                      newValue = newValue.filter((value) => value !== item);\n                                      if (newValue.length === 0) { // If unchecking last item, default to \"None\" or empty as preferred\n                                        // newValue = [\"None\"]; // Option: default to None\n                                      }\n                                    }\n                                    field.onChange(newValue);\n                                  }}\n                                />\n                              </FormControl>\n                              <FormLabel className=\"font-normal text-sm\">{item}</FormLabel>\n                            </FormItem>\n                          );\n                        }}\n                      />\n                    ))}\n                  </div>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"allergies\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Food Allergies (comma-separated, e.g., Peanuts, Shellfish)</FormLabel>\n                  <FormControl><Input placeholder=\"Leave blank if none\" {...field} /></FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"dislikedFoods\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Disliked Foods (comma-separated, e.g., Mushrooms, Olives)</FormLabel>\n                  <FormControl><Textarea placeholder=\"Leave blank if none\" {...field} /></FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <Button type=\"submit\" size=\"lg\" className=\"w-full font-headline text-lg py-3.5\" disabled={isLoading}>\n              {isLoading ? <><Loader2 className=\"mr-2 h-5 w-5 animate-spin\" /> Generating Your Plan...</> : 'Get My Meal Plan'}\n            </Button>\n          </form>\n        </Form>\n      </CardContent>\n    </Card>\n  );\n}\n\n    \n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1595, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;;AAIf,UAAU,WAAW,GAAG,wKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}}]
}